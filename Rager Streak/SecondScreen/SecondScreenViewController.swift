//
//  SecondScreenViewController.swift
//  Rager Streak
//
//  Created by guilherme.martinelli on 16/11/20.
//  Copyright (c) 2020 guilherme.martinelli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SecondScreenDisplayLogic: class {
    func setupButtonAndInput(viewModelButton: LoginScreen.Model.RSButton, viewModelInput: LoginScreen.Model.RSInput)
}

class SecondScreenViewController: UIViewController, SecondScreenDisplayLogic {
    
    @IBOutlet weak var inputUser: RSTextField!
    @IBOutlet weak var inputPassword: UITextField!
    @IBOutlet weak var buttonLogin: UIButton!
    
    var interactor: SecondScreenBusinessLogic?
    var router: (NSObjectProtocol & SecondScreenRoutingLogic & SecondScreenDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup()
    {
        let viewController = self
        let interactor = SecondScreenInteractor()
        let presenter = SecondScreenPresenter()
        let router = SecondScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    func setupButtonAndInput(viewModelButton: LoginScreen.Model.RSButton,
                             viewModelInput: LoginScreen.Model.RSInput) {
        inputUser.backgroundColor = viewModelInput.backgroundColor
        inputUser.layer.borderWidth = viewModelInput.borderWidth
        inputUser.layer.borderColor = viewModelInput.borderColor
        inputUser.layer.cornerRadius = 2
        inputPassword.backgroundColor = viewModelInput.backgroundColor
        inputPassword.layer.borderWidth = viewModelInput.borderWidth
        inputPassword.layer.borderColor = viewModelInput.borderColor
        inputPassword.layer.cornerRadius = 2
        buttonLogin.layer.borderWidth = viewModelButton.borderWidth
        buttonLogin.layer.borderColor = viewModelButton.borderColor
        
    }
    
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        //TODO: Criar um componente para navbar
        self.navigationController?.setNavigationBarHidden(false, animated: false)
        view.backgroundColor = UIColor(hexString: "131313")
        self.navigationController?.navigationBar.tintColor = UIColor.white
        self.navigationController?.navigationBar.barTintColor = .clear
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for:.default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        self.navigationController?.navigationBar.layoutIfNeeded()
        interactor?.setupButtonAndInputs()
    }

    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
}
